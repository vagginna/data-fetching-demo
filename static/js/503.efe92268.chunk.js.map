{"version":3,"file":"static/js/503.efe92268.chunk.js","mappings":"yKAEA,MAUA,EAViBA,EAAAA,MAAWC,IAAe,IAAd,KAAEC,GAAMD,EAEnC,OADAE,QAAQC,IAAI,uEAAiBF,EAAKG,KAEhCC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKL,EAAKO,SACVD,EAAAA,EAAAA,KAAA,KAAAD,SAAIL,EAAKQ,SACN,ICoCT,EAzCkBC,KAChB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAkBnC,OAhBAK,EAAAA,EAAAA,YAAU,KACWC,WACjB,IACE,MAAMC,QAAiBC,MAAM,8CACvBC,QAAaF,EAASG,OAC5BX,EAASU,EACX,CAAE,MAAON,GACPC,EAASD,EAAMQ,QACjB,CAAC,QACCT,GAAW,EACb,GAGFU,EAAY,GACX,IAECX,GACKP,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wDAGRU,GACKX,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,yCAASU,MAInBX,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+EACJC,EAAAA,EAAAA,KAAA,MAAAD,SACGK,EAAMe,MAAM,EAAG,IAAIC,KAAK1B,IACvBM,EAAAA,EAAAA,KAACqB,EAAQ,CAAe3B,KAAMA,GAAfA,EAAKG,UAGpB,C","sources":["components/PostItem.js","components/PostsList.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst PostItem = React.memo(({ post }) => {\r\n  console.log('Рендер поста:', post.id); // Для отслеживания рендеров\r\n  return (\r\n    <li>\r\n      <h3>{post.title}</h3>\r\n      <p>{post.body}</p>\r\n    </li>\r\n  );\r\n});\r\n\r\nexport default PostItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PostItem from './PostItem';\r\n\r\nconst PostsList = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n        const data = await response.json();\r\n        setPosts(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p>Загрузка...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Ошибка: {error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Список постов</h2>\r\n      <ul>\r\n        {posts.slice(0, 10).map((post) => (\r\n          <PostItem key={post.id} post={post} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsList;\r\n"],"names":["React","_ref","post","console","log","id","_jsxs","children","_jsx","title","body","PostsList","posts","setPosts","useState","loading","setLoading","error","setError","useEffect","async","response","fetch","data","json","message","fetchPosts","slice","map","PostItem"],"sourceRoot":""}